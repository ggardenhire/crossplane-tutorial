apiVersion: cluster.palette.crossplane.io/v1alpha1
kind: Profile
metadata:
  name: aws-crossplane-cluster-profile
  namespace: crossplane-system
spec:
  forProvider:
    cloud: "aws"
    description: "AWS Crossplane cluster profile"
    type: "cluster"
    pack:
      - name: "amazon-linux-eks"
        tag: "1.0.0"
        registryUid: "6657808fb0dd4223006bdefa"
        values:
          "# AMI will be selected automatically based on the kubernetes version, region chosen"
        uid: "66579351d200852bef7127fe"

      - name: "kubernetes-eks"
        tag: "1.32"
        uid: "67b91437bc0035238f9553fe"
        registryUid: "6657808fb0dd4223006bdefa"
        values:
          "# spectrocloud.com/enabled-presets: Control Plane Logging:logging-disabled\n## EKS settings\nmanagedControlPlane:\n  \n  # Disable creation of an identity provider for the controller\n  # for use with IAM roles for service accounts\n  # Changes to this field after the cluster is provisioned\n  # will have no effect on the associated OIDC Identity provider.\n  # Defaults to false\n  #disableAssociateOIDCProvider: true\n\n  ## Controlplane Logging\n  logging:\n\n    # Setting to toggle Kubernetes API Server logging (kube-apiserver)\n    apiServer: false\n\n    # Setting to toggle the Kubernetes API audit logging\n    audit: false\n\n    # Setting to toggle the cluster authentication logging\n    authenticator: false\n\n    # Setting to toggle the controller manager (kube-controller-manager) logging\n    controllerManager: false\n\n    # Setting to toggle the Kubernetes scheduler (kube-scheduler) logging\n    scheduler: false\n\n  ## IRSA Roles will be created, additional policy ARNs attached and IRSA trust policy added.\n  ## To lock to a single ServiceAccount use serviceAccount name and namespace\n  #irsaRoles:\n  #- name: \"{{.spectro.system.cluster.name}}-irsa-cni\"\n  #  policies:\n  #    - arn:aws:iam::aws:policy/AmazonEKS_CNI_Policy\n  #  serviceAccount: # optional, defaults to audience sts.amazonaws.com\n  #    name: aws-node\n  #    namespace: kube-system\n  #- name: \"{{.spectro.system.cluster.name}}-irsa-csi\"\n  #  policies:\n  #    - arn:aws:iam::aws:policy/service-role/AmazonEBSCSIDriverPolicy\n\n  ## Security Group Overrides, if you use static VPC placement you can also force the SecurityGroup for the\n  ## EKS components, this is optional and if you do not set an override a SecurityGroup will be created and assigned\n  #securityGroupOverrides:\n    #controlplane: \"sg-12345\"\n    #bastion: \"sg-12345\"\n    #node: \"sg-12345\"\n    #node-eks-additional: \"sg-12345\"\n    #apiserver-lb: \"sg-12345\"\n    #lb: \"sg-12345\"\n\n  ## OIDC related config\n  #oidcIdentityProvider:\n    #identityProviderConfigName: 'eks-oidc'     # The name of the OIDC provider configuration\n    #issuerUrl: 'https://tenant.okta.com'       # The URL of the OpenID identity provider\n    #clientId: '<your oidc client ID>'      # The ID for the client application that makes authentication requests to the OpenID identity provider\n    #usernameClaim: \"email\"                     # The JSON Web Token (JWT) claim to use as the username\n    #usernamePrefix: \"-\"                        # The prefix that is prepended to username claims to prevent clashes with existing names\n    #groupsClaim: \"groups\"                      # The JWT claim that the provider uses to return your groups\n    #groupsPrefix: \"-\"                          # The prefix that is prepended to group claims to prevent clashes with existing names\n    #requiredClaims:                            # The key value pairs that describe required claims in the identity token\n\n  ## A list of additional policies to attach to the control plane role\n  #roleAdditionalPolicies:\n  #- {{ arn for the policy1 | format \"${string}\" }}\n  #- {{ arn for the policy2 | format \"${string}\" }}\n\n  ## Enable IAM user and role access to your cluster\n  ## https://docs.aws.amazon.com/eks/latest/userguide/add-user-role.html\n  #iamAuthenticatorConfig:\n  #  mapRoles:\n  #  - rolearn: arn:aws:iam::000000000000:role/KubernetesNode\n  #    username: system:node:{{EC2PrivateDNSName}}\n  #    groups:\n  #    - system:bootstrappers\n  #    - system:nodes\n  #  mapUsers:\n  #  - userarn: arn:aws:iam::000000000000:user/Alice\n  #    username: alice\n  #    groups:\n  #    - system:masters\n\n## Custom EKS node roleName for all the node groups\n## This self-managed IAM role(https://docs.aws.amazon.com/eks/latest/userguide/create-node-role.html) should include the required\n## policies - 'AmazonEKSWorkerNodePolicy','AmazonEC2ContainerRegistryReadOnly', 'AmazonSSMManagedInstanceCore' and 'AmazonEKS_CNI_Policy'\n## NOTE: The roleName cannot have the prefix 'ng-role_' since this is reserved for spectro-generated roles\n#managedMachinePool:\n  #roleName: {{ name of the self-managed role | format \"${string}\" }}\n\n  ## A list of additional policies to attach to the node group role\n  #roleAdditionalPolicies:\n  #- {{ arn for the policy1 | format \"${string}\" }}\n  #- {{ arn for the policy2 | format \"${string}\" }}\n\n## Client configuration to add OIDC based authentication flags in kubeconfig\n#clientConfig:\n  #oidc-issuer-url: \"{{ .spectro.pack.kubernetes-eks.managedControlPlane.oidcIdentityProvider.issuerUrl }}\"\n  #oidc-client-id: \"{{ .spectro.pack.kubernetes-eks.managedControlPlane.oidcIdentityProvider.clientId }}\"\n  #oidc-client-secret: \"<your oidc client secret>\"\n  #oidc-extra-scope: profile,email"

      - name: "cni-aws-vpc-eks"
        tag: "1.0"
        uid: "66579353d200852c0bd0b3c8"
        registryUid: "6657808fb0dd4223006bdefa"
        values:
          "# AWS VPC CNI will be auto-installed"

      - name: "csi-aws-ebs"
        tag: "1.39.0"
        uid: "67b91437bc003523a2569e41"
        registryUid: "6657808fb0dd4223006bdefa"
        values:
          "pack:\n  content:\n    images:\n      - image: us-docker.pkg.dev/palette-images/packs/csi-aws-ebs/1.39.0/aws-ebs-csi-driver:v1.39.0\n      - image: us-docker.pkg.dev/palette-images/packs/csi-aws-ebs/1.39.0/external-provisioner:v5.1.0-eks-1-31-12\n      - image: us-docker.pkg.dev/palette-images/packs/csi-aws-ebs/1.39.0/external-attacher:v4.8.0-eks-1-31-12\n      - image: us-docker.pkg.dev/palette-images/packs/csi-aws-ebs/1.39.0/external-resizer:v1.12.0-eks-1-31-11\n      - image: us-docker.pkg.dev/palette-images/packs/csi-aws-ebs/1.39.0/livenessprobe:v2.14.0-eks-1-31-12\n      - image: us-docker.pkg.dev/palette-images/packs/csi-aws-ebs/1.39.0/node-driver-registrar:v2.13.0-eks-1-31-12\n      - image: us-docker.pkg.dev/palette-images/packs/csi-aws-ebs/1.39.0/external-snapshotter/csi-snapshotter:v8.2.0-eks-1-31-12\n      - image: us-docker.pkg.dev/palette-images/packs/csi-aws-ebs/1.39.0/volume-modifier-for-k8s:v0.5.1\n    charts:\n      - repo: https://kubernetes-sigs.github.io/aws-ebs-csi-driver\n        name: aws-ebs-csi-driver\n        version: 2.39.3\n  namespace: \"kube-system\"\ncharts:\n  aws-ebs-csi-driver:\n    storageClasses:\n      # Default Storage Class\n      - name: spectro-storage-class\n        # annotation metadata\n        annotations:\n          storageclass.kubernetes.io/is-default-class: \"true\"\n          # label metadata\n          # labels:\n          #   my-label-is: supercool\n          # defaults to WaitForFirstConsumer\n        volumeBindingMode: WaitForFirstConsumer\n        # defaults to Delete\n        reclaimPolicy: Delete\n        parameters:\n          # File system type: xfs, ext2, ext3, ext4\n          csi.storage.k8s.io/fstype: \"ext4\"\n          # EBS volume type: io1, io2, gp2, gp3, sc1, st1, standard\n          type: \"gp2\"\n          # I/O operations per second per GiB. Required when io1 or io2 volume type is specified.\n          # iopsPerGB: \"\"\n          # Applicable only when io1 or io2 volume type is specified\n          # allowAutoIOPSPerGBIncrease: false\n          # I/O operations per second. Applicable only for gp3 volumes.\n          # iops: \"\"\n          # Throughput in MiB/s. Applicable only for gp3 volumes.\n          # throughput: \"\"\n          # Whether the volume should be encrypted or not\n          # encrypted: \"\"\n          # The full ARN of the key to use when encrypting the volume. When not specified, the default KMS key is used.\n          # kmsKeyId: \"\"\n    # Additional Storage Class \n    # - name: addon-storage-class\n    # annotations:\n    #   storageclass.kubernetes.io/is-default-class: \"false\"\n    # labels:\n    #   my-label-is: supercool\n    # volumeBindingMode: WaitForFirstConsumer\n    # reclaimPolicy: Delete\n    # parameters:\n    # csi.storage.k8s.io/fstype: \"ext4\"\n    # type: \"gp2\"\n    # iopsPerGB: \"\"\n    # allowAutoIOPSPerGBIncrease: false\n    # iops: \"\"\n    # throughput: \"\"\n    # encrypted: \"\"\n    # kmsKeyId: \"\"\n\n    image:\n      repository: us-docker.pkg.dev/palette-images/packs/csi-aws-ebs/1.39.0/aws-ebs-csi-driver\n      # Overrides the image tag whose default is v{{ .Chart.AppVersion }}\n      tag: \"v1.39.0\"\n      pullPolicy: IfNotPresent\n    # -- Custom labels to add into metadata\n    customLabels: {}\n    # k8s-app: aws-ebs-csi-driver\n\n    sidecars:\n      provisioner:\n        env: []\n        image:\n          pullPolicy: IfNotPresent\n          repository: us-docker.pkg.dev/palette-images/packs/csi-aws-ebs/1.39.0/external-provisioner\n          tag: \"v5.1.0-eks-1-31-12\"\n        logLevel: 2\n        # Additional parameters provided by external-provisioner.\n        additionalArgs: []\n        # Grant additional permissions to external-provisioner\n        additionalClusterRoleRules:\n        resources: {}\n        # Tune leader lease election for csi-provisioner.\n        # Leader election is on by default.\n        leaderElection:\n          enabled: true\n          # Optional values to tune lease behavior.\n          # The arguments provided must be in an acceptable time.ParseDuration format.\n          # Ref: https://pkg.go.dev/flag#Duration\n          # leaseDuration: \"15s\"\n          # renewDeadline: \"10s\"\n          # retryPeriod: \"5s\"\n        securityContext:\n          seccompProfile:\n            type: RuntimeDefault\n          readOnlyRootFilesystem: true\n          allowPrivilegeEscalation: false\n      attacher:\n        env: []\n        image:\n          pullPolicy: IfNotPresent\n          repository: us-docker.pkg.dev/palette-images/packs/csi-aws-ebs/1.39.0/external-attacher\n          tag: \"v4.8.0-eks-1-31-12\"\n        # Tune leader lease election for csi-attacher.\n        # Leader election is on by default.\n        leaderElection:\n          enabled: true\n          # Optional values to tune lease behavior.\n          # The arguments provided must be in an acceptable time.ParseDuration format.\n          # Ref: https://pkg.go.dev/flag#Duration\n          # leaseDuration: \"15s\"\n          # renewDeadline: \"10s\"\n          # retryPeriod: \"5s\"\n        logLevel: 2\n        # Additional parameters provided by external-attacher.\n        additionalArgs: []\n        # Grant additional permissions to external-attacher\n        additionalClusterRoleRules: []\n        resources: {}\n        securityContext:\n          seccompProfile:\n            type: RuntimeDefault\n          readOnlyRootFilesystem: true\n          allowPrivilegeEscalation: false\n      snapshotter:\n        # Enables the snapshotter sidecar even if the snapshot CRDs are not installed\n        forceEnable: false\n        env: []\n        image:\n          pullPolicy: IfNotPresent\n          repository: us-docker.pkg.dev/palette-images/packs/csi-aws-ebs/1.39.0/external-snapshotter/csi-snapshotter\n          tag: \"v8.2.0-eks-1-31-12\"\n        logLevel: 2\n        # Additional parameters provided by csi-snapshotter.\n        additionalArgs: []\n        # Grant additional permissions to csi-snapshotter\n        additionalClusterRoleRules: []\n        resources: {}\n        securityContext:\n          seccompProfile:\n            type: RuntimeDefault\n          readOnlyRootFilesystem: true\n          allowPrivilegeEscalation: false\n      livenessProbe:\n        image:\n          pullPolicy: IfNotPresent\n          repository: us-docker.pkg.dev/palette-images/packs/csi-aws-ebs/1.39.0/livenessprobe\n          tag: \"v2.14.0-eks-1-31-12\"\n        # Additional parameters provided by livenessprobe.\n        additionalArgs: []\n        resources: {}\n        securityContext:\n          readOnlyRootFilesystem: true\n          allowPrivilegeEscalation: false\n      resizer:\n        env: []\n        image:\n          pullPolicy: IfNotPresent\n          repository: us-docker.pkg.dev/palette-images/packs/csi-aws-ebs/1.39.0/external-resizer\n          tag: \"v1.12.0-eks-1-31-11\"\n        # Tune leader lease election for csi-resizer.\n        # Leader election is on by default.\n        leaderElection:\n          enabled: true\n          # Optional values to tune lease behavior.\n          # The arguments provided must be in an acceptable time.ParseDuration format.\n          # Ref: https://pkg.go.dev/flag#Duration\n          # leaseDuration: \"15s\"\n          # renewDeadline: \"10s\"\n          # retryPeriod: \"5s\"\n        logLevel: 2\n        # Additional parameters provided by external-resizer.\n        additionalArgs: []\n        # Grant additional permissions to external-resizer\n        additionalClusterRoleRules: []\n        resources: {}\n        securityContext:\n          seccompProfile:\n            type: RuntimeDefault\n          readOnlyRootFilesystem: true\n          allowPrivilegeEscalation: false\n      nodeDriverRegistrar:\n        env: []\n        image:\n          pullPolicy: IfNotPresent\n          repository: us-docker.pkg.dev/palette-images/packs/csi-aws-ebs/1.39.0/node-driver-registrar\n          tag: \"v2.13.0-eks-1-31-12\"\n        logLevel: 2\n        # Additional parameters provided by node-driver-registrar.\n        additionalArgs: []\n        resources: {}\n        securityContext:\n          readOnlyRootFilesystem: true\n          allowPrivilegeEscalation: false\n        livenessProbe:\n          exec:\n            command:\n              - /csi-node-driver-registrar\n              - --kubelet-registration-path=$(DRIVER_REG_SOCK_PATH)\n              - --mode=kubelet-registration-probe\n          initialDelaySeconds: 30\n          periodSeconds: 90\n          timeoutSeconds: 15\n      volumemodifier:\n        env: []\n        image:\n          pullPolicy: IfNotPresent\n          repository: us-docker.pkg.dev/palette-images/packs/csi-aws-ebs/1.39.0/volume-modifier-for-k8s\n          tag: \"v0.5.1\"\n        leaderElection:\n          enabled: true\n          # Optional values to tune lease behavior.\n          # The arguments provided must be in an acceptable time.ParseDuration format.\n          # Ref: https://pkg.go.dev/flag#Duration\n          # leaseDuration: \"15s\"\n          # renewDeadline: \"10s\"\n          # retryPeriod: \"5s\"\n        logLevel: 2\n        # Additional parameters provided by volume-modifier-for-k8s.\n        additionalArgs: []\n        resources: {}\n        securityContext:\n          seccompProfile:\n            type: RuntimeDefault\n          readOnlyRootFilesystem: true\n          allowPrivilegeEscalation: false\n    proxy:\n      http_proxy:\n      no_proxy:\n    imagePullSecrets: []\n    nameOverride:\n    fullnameOverride:\n    awsAccessSecret:\n      name: aws-secret\n      keyId: key_id\n      accessKey: access_key\n    controller:\n      batching: true\n      volumeModificationFeature:\n        enabled: false\n      # Additional parameters provided by aws-ebs-csi-driver controller.\n      additionalArgs: []\n      sdkDebugLog: false\n      loggingFormat: text\n      affinity:\n        nodeAffinity:\n          preferredDuringSchedulingIgnoredDuringExecution:\n            - weight: 1\n              preference:\n                matchExpressions:\n                  - key: eks.amazonaws.com/compute-type\n                    operator: NotIn\n                    values:\n                      - fargate\n                      - auto\n                      - hybrid\n        podAntiAffinity:\n          preferredDuringSchedulingIgnoredDuringExecution:\n            - podAffinityTerm:\n                labelSelector:\n                  matchExpressions:\n                    - key: app\n                      operator: In\n                      values:\n                        - ebs-csi-controller\n                topologyKey: kubernetes.io/hostname\n              weight: 100\n      # The default filesystem type of the volume to provision when fstype is unspecified in the StorageClass.\n      # If the default is not set and fstype is unset in the StorageClass, then no fstype will be set\n      defaultFsType: ext4\n      env: []\n      # Use envFrom to reference ConfigMaps and Secrets across all containers in the deployment\n      envFrom: []\n      # If set, add pv/pvc metadata to plugin create requests as parameters.\n      extraCreateMetadata: true\n      # Extra volume tags to attach to each dynamically provisioned volume.\n      # ---\n      # extraVolumeTags:\n      #   key1: value1\n      #   key2: value2\n      extraVolumeTags: {}\n      httpEndpoint:\n      # (deprecated) The TCP network address where the prometheus metrics endpoint\n      # will run (example: `:8080` which corresponds to port 8080 on local host).\n      # The default is empty string, which means metrics endpoint is disabled.\n      # ---\n      enableMetrics: false\n      serviceMonitor:\n        # Enables the ServiceMonitor resource even if the prometheus-operator CRDs are not installed\n        forceEnable: false\n        # Additional labels for ServiceMonitor object\n        labels:\n          release: prometheus\n        interval: \"15s\"\n      # If set to true, AWS API call metrics will be exported to the following\n      # TCP endpoint: \"0.0.0.0:3301\"\n      # ---\n      # ID of the Kubernetes cluster used for tagging provisioned EBS volumes (optional).\n      k8sTagClusterId:\n      logLevel: 2\n      userAgentExtra: \"helm\"\n      nodeSelector: {}\n      deploymentAnnotations: {}\n      podAnnotations: {}\n      podLabels: {}\n      podDisruptionBudget:\n        # Warning: Disabling PodDisruptionBudget may lead to delays in stateful workloads starting due to controller\n        # pod restarts or evictions.\n        enabled: true\n        # unhealthyPodEvictionPolicy:\n      priorityClassName: system-cluster-critical\n      # AWS region to use. If not specified then the region will be looked up via the AWS EC2 metadata\n      # service.\n      # ---\n      # region: us-east-1\n      region:\n      replicaCount: 2\n      revisionHistoryLimit: 10\n      socketDirVolume:\n        emptyDir: {}\n      updateStrategy:\n        type: RollingUpdate\n        rollingUpdate:\n          maxUnavailable: 1\n      # type: RollingUpdate\n      # rollingUpdate:\n      #   maxSurge: 0\n      #   maxUnavailable: 1\n      resources:\n        requests:\n          cpu: 10m\n          memory: 40Mi\n        limits:\n          memory: 256Mi\n          cpu: 100m\n      serviceAccount:\n        # A service account will be created for you if set to true. Set to false if you want to use your own.\n        create: true\n        name: ebs-csi-controller-sa\n        annotations: {}\n        ## Enable if EKS IAM for SA is used\n        # eks.amazonaws.com/role-arn: arn:<partition>:iam::<account>:role/ebs-csi-role\n        automountServiceAccountToken: true\n      tolerations:\n        - key: CriticalAddonsOnly\n          operator: Exists\n        - effect: NoExecute\n          operator: Exists\n          tolerationSeconds: 300\n      # TSCs without the label selector stanza\n      #\n      # Example:\n      #\n      # topologySpreadConstraints:\n      #  - maxSkew: 1\n      #    topologyKey: topology.kubernetes.io/zone\n      #    whenUnsatisfiable: ScheduleAnyway\n      #  - maxSkew: 1\n      #    topologyKey: kubernetes.io/hostname\n      #    whenUnsatisfiable: ScheduleAnyway\n      topologySpreadConstraints: []\n      # securityContext on the controller pod\n      securityContext:\n        runAsNonRoot: true\n        runAsUser: 1000\n        runAsGroup: 1000\n        fsGroup: 1000\n      # Add additional volume mounts on the controller with controller.volumes and controller.volumeMounts\n      volumes: []\n      # Add additional volumes to be mounted onto the controller:\n      # - name: custom-dir\n      #   hostPath:\n      #     path: /path/to/dir\n      #     type: Directory\n      volumeMounts: []\n      # And add mount paths for those additional volumes:\n      # - name: custom-dir\n      #   mountPath: /mount/path\n      # ---\n      # securityContext on the controller container (see sidecars for securityContext on sidecar containers)\n      containerSecurityContext:\n        seccompProfile:\n          type: RuntimeDefault\n        readOnlyRootFilesystem: true\n        allowPrivilegeEscalation: false\n      initContainers: []\n      # containers to be run before the controller's container starts.\n      #\n      # Example:\n      #\n      # - name: wait\n      #   image: busybox\n      #   command: [ 'sh', '-c', \"sleep 20\" ]\n      # Enable opentelemetry tracing for the plugin running on the daemonset\n      otelTracing: {}\n      #  otelServiceName: ebs-csi-controller\n      #  otelExporterEndpoint: \"http://localhost:4317\"\n\n      # Enable dnsConfig for the controller and node pods\n      dnsConfig: {}\n    node:\n      # Enable SELinux-only optimizations on the EBS CSI Driver node pods\n      # Must only be set true if all linux nodes in the DaemonSet have SELinux enabled\n      selinux: false\n      env: []\n      envFrom: []\n      kubeletPath: /var/lib/kubelet\n      loggingFormat: text\n      logLevel: 2\n      enableMetrics: false\n      priorityClassName:\n      additionalArgs: []\n      affinity:\n        nodeAffinity:\n          requiredDuringSchedulingIgnoredDuringExecution:\n            nodeSelectorTerms:\n              - matchExpressions:\n                  - key: eks.amazonaws.com/compute-type\n                    operator: NotIn\n                    values:\n                      - fargate\n                      - auto\n                      - hybrid\n                  - key: node.kubernetes.io/instance-type\n                    operator: NotIn\n                    values:\n                      - a1.medium\n                      - a1.large\n                      - a1.xlarge\n                      - a1.2xlarge\n                      - a1.4xlarge\n      nodeSelector: {}\n      daemonSetAnnotations: {}\n      podAnnotations: {}\n      podLabels: {}\n      terminationGracePeriodSeconds: 30\n      tolerateAllTaints: true\n      tolerations:\n        - operator: Exists\n          effect: NoExecute\n          tolerationSeconds: 300\n      resources:\n        requests:\n          cpu: 10m\n          memory: 40Mi\n        limits:\n          memory: 256Mi\n          cpu: 100m\n      revisionHistoryLimit: 10\n      probeDirVolume:\n        emptyDir: {}\n      serviceAccount:\n        create: true\n        name: ebs-csi-node-sa\n        annotations: {}\n        ## Enable if EKS IAM for SA is used\n        # eks.amazonaws.com/role-arn: arn:<partition>:iam::<account>:role/ebs-csi-role\n        automountServiceAccountToken: true\n      # Enable the linux daemonset creation\n      enableLinux: true\n      enableWindows: false\n      # Warning: This option will be removed in a future release. It is a temporary workaround for users unable to immediately migrate off of older kernel versions.\n      # Formats XFS volumes with bigtime=0,inobtcount=0,reflink=0, for mounting onto nodes with linux kernel version <= 5.4.\n      # Note that XFS volumes formatted with this option will only have timestamp records until 2038.\n      legacyXFS: false\n      # The number of attachment slots to reserve for system use (and not to be used for CSI volumes)\n      # When this parameter is not specified (or set to -1), the EBS CSI Driver will attempt to determine the number of reserved slots via heuristic\n      # Cannot be specified at the same time as `node.volumeAttachLimit`\n      reservedVolumeAttachments:\n      # The \"maximum number of attachable volumes\" per node\n      # Cannot be specified at the same time as `node.reservedVolumeAttachments`\n      volumeAttachLimit:\n      updateStrategy:\n        type: RollingUpdate\n        rollingUpdate:\n          maxUnavailable: \"10%\"\n      hostNetwork: false\n      # securityContext on the node pod\n      securityContext:\n        # The node pod must be run as root to bind to the registration/driver sockets\n        runAsNonRoot: false\n        runAsUser: 0\n        runAsGroup: 0\n        fsGroup: 0\n      # allows you to deploy aws-ebs-csi-node daemonset to separate namespace (make sure namespace exists before deploy)\n      namespaceOverride: \"\"\n      # Add additional volume mounts on the node pods with node.volumes and node.volumeMounts\n      volumes: []\n      # Add additional volumes to be mounted onto the node pods:\n      # - name: custom-dir\n      #   hostPath:\n      #     path: /path/to/dir\n      #     type: Directory\n      volumeMounts: []\n      # And add mount paths for those additional volumes:\n      # - name: custom-dir\n      #   mountPath: /mount/path\n      # ---\n      # securityContext on the node container (see sidecars for securityContext on sidecar containers)\n      # Privileged containers always run as `Unconfined`, which means that they are not restricted by a seccomp profile.\n      containerSecurityContext:\n        readOnlyRootFilesystem: true\n        privileged: true\n      initContainers: []\n      # containers to be run before the csi-node's container starts.\n      #\n      # Example:\n      #\n      # - name: wait\n      #   image: busybox\n      #   command: [ 'sh', '-c', \"sleep 20\" ]\n      # Enable opentelemetry tracing for the plugin running on the daemonset\n      otelTracing: {}\n      #  otelServiceName: ebs-csi-node\n      #  otelExporterEndpoint: \"http://localhost:4317\"\n    additionalDaemonSets:\n    # Additional node DaemonSets, using the node config structure\n    # See docs/additional-daemonsets.md for more information\n    #\n    # example:\n    #   nodeSelector:\n    #     node.kubernetes.io/instance-type: c5.large\n    #   volumeAttachLimit: 15\n\n    # Enable compatibility for the A1 instance family via use of an AL2-based image in a separate DaemonSet\n    # a1CompatibilityDaemonSet: true\n    # storageClasses: []\n    # Add StorageClass resources like:\n    # - name: ebs-sc\n    #   # annotation metadata\n    #   annotations:\n    #     storageclass.kubernetes.io/is-default-class: \"true\"\n    #   # label metadata\n    #   labels:\n    #     my-label-is: supercool\n    #   # defaults to WaitForFirstConsumer\n    #   volumeBindingMode: WaitForFirstConsumer\n    #   # defaults to Delete\n    #   reclaimPolicy: Retain\n    #   parameters:\n    #     encrypted: \"true\"\n    defaultStorageClass:\n      enabled: false\n    volumeSnapshotClasses: []\n    # Add VolumeSnapshotClass resources like:\n    # - name: ebs-vsc\n    #   # annotation metadata\n    #   annotations:\n    #     snapshot.storage.kubernetes.io/is-default-class: \"true\"\n    #   # label metadata\n    #   labels:\n    #     my-label-is: supercool\n    #   # deletionPolicy must be specified\n    #   deletionPolicy: Delete\n    #   parameters:\n\n    # Use old CSIDriver without an fsGroupPolicy set\n    # Intended for use with older clusters that cannot easily replace the CSIDriver object\n    # This parameter should always be false for new installations\n    useOldCSIDriver: false\n    # Deploy EBS CSI Driver without controller and associated resources\n    nodeComponentOnly: false\n    # Instruct the AWS SDK to use AWS FIPS endpoints, and deploy container built with BoringCrypto (a FIPS-validated cryptographic library) instead of the Go default\n    #\n    # The EBS CSI Driver FIPS images have not undergone FIPS certification, and no official guarnatee is made about the compliance of these images under the FIPS standard\n    # Users relying on these images for FIPS compliance should perform their own independent evaluation\n    fips: false"

  providerConfigRef:
    name: default